'\" t
.\"     Title: timew-dates
.\"    Author: [see the "AUTHOR(S)" section]
.\" Generator: Asciidoctor 2.0.20
.\"      Date: 2023-10-14
.\"    Manual: User Manuals
.\"    Source: timew 1.7.0
.\"  Language: English
.\"
.TH "TIMEW\-DATES" "7" "2023-10-14" "timew 1.7.0" "User Manuals"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE pass:[blue\ R\ <\ >]
.\}
.SH "NAME"
timew-dates \- date formats supported by Timewarrior
.SH "SYNOPSIS"

.SH "DESCRIPTION"
.sp
Timewarrior supports the following datetime formats based on ISO\-8601.
If times are followed by a \*(AqZ\*(Aq, they are assumed to be in UTC, otherwise local time (TZ) is assumed.
.sp
.if n .RS 4
.nf
.fam C
<extended\-date> [T <extended\-time>]   Extended date, optional extended time
<date> [T <time>]                     Date, optional time
<extended\-time>                       Extended time
<time>                                Time
.fam
.fi
.if n .RE
.sp
extended\-date
.RS 4
.sp
.if n .RS 4
.nf
.fam C
YYYY\-MM\-DD                          Year, month, day
YYYY\-MM                             Year, month, 1st
YYYY\-DDD                            Year, Julian day 001\-366
YYYY\-WwwD                           Year, week number, day number
YYYY\-Www                            Year, week number, day 1
.fam
.fi
.if n .RE
.RE
.sp
extended\-time
.RS 4
.sp
.if n .RS 4
.nf
.fam C
hh:mm[:ss]Z                         Hours, minutes, optional seconds, UTC
hh:mm[:ss][+/\-hh:mm]                Hours, minutes, optional seconds, TZ
.fam
.fi
.if n .RE
.RE
.sp
date
.RS 4
.sp
.if n .RS 4
.nf
.fam C
YYYYMMDD                            Year, month, day
YYYYWww                             Year, week number, day number
YYYYDDD                             Year, Julian day 001\-366
.fam
.fi
.if n .RE
.RE
.sp
time
.RS 4
.sp
.if n .RS 4
.nf
.fam C
hhmm[ss]Z                           Hour, minutes, optional seconds, UTC
hhmm[ss][+/\-hh[mm]]                 Hour, minutes, optional seconds, TZ
.fam
.fi
.if n .RE
.RE
.SH "EXAMPLES"
.sp
Here are some examples for ISO datetimes:
.sp
.if n .RS 4
.nf
.fam C
2016\-06\-09T08:12:00Z
2016\-06T08:12:00+01:00
2016\-06T08:12Z
2016\-161
2016\-W244
2016\-W24
20160609T081200Z
2016W24
8:12:00Z
0812\-0500
.fam
.fi
.if n .RE
.sp
In addition to the standard date formats, the following named dates are supported:
.sp
.if n .RS 4
.nf
.fam C
now                                   Current date and time
today                                 Current date at 0:00:00
yesterday                             Yesterday at 0:00:00
tomorrow                              Tomorrow at 0:00:00 (midnight tonight)
<day\-of\-week>                         Previous named day at 0:00:00
<month\-of\-year>                       Previous 1st of the month at 0:00:00
hh:mm[:ss][am|a|pm|p]                 Short time format
Nst, Nnd, Nrd, Nth                    Previous 1st, 2nd, 3rd ...
<epoch>                               POSIX time (at least 315532800)
later                                 2038\-01\-18T0:00:00 (Y2K38)
someday                               2038\-01\-18T0:00:00 (Y2K38)
sopd, eopd                            Start/end of previous day
sod, eod                              Start/end of current day
sond, eond                            Start/end of next day
sopw, eopw                            Start/end of previous week
sow, eow                              Start/end of current week
sonw, eonw                            Start/end of next week
sopww, eopww                          Start/end of previous work week (mon \- fri)
soww, eoww                            Start/end of current work week (mon \- fri)
sonww, eonww                          Start/end of next work week (mon \- fri)
sopm, eopm                            Start/end of previous month
som, eom                              Start/end of current month
sonm, eonm                            Start/end of next month
sopq, eopq                            Start/end of previous quarter
soq, eoq                              Start/end of current quarter
sonq, eonq                            Start/end of next quarter
sopy, eopy                            Start/end of previous year
soy, eoy                              Start/end of current year
sony, eony                            Start/end of next year
easter                                Easter Sunday
eastermonday                          Easter Monday
ascension                             Ascension
pentecost                             Pentecost
goodfriday                            Good Friday
midsommar                             midnight, 1st Saturday after 20th June
midsommarafton                        midnight, 1st Friday after 19th June
juhannus                              midnight, 1st Friday after 19th June
.fam
.fi
.if n .RE
.sp
For times, the following are also possible:
.sp
.if n .RS 4
.nf
.fam C
8am
24th
monday
august
.fam
.fi
.if n .RE
.SH "NOTES"
.sp
The minimum value for the POSIX time format of 315532800 (that is 1980\-01\-01) was chosen to avoid confusion with ISO dates in the YYYYMMDD format.
.sp
Because named dates are defined with time 0:00:00, using them as range end excludes the respective day.
E.g. using \*(Aqtoday\*(Aq as upper range
.sp
.if n .RS 4
.nf
.fam C
$ timew sum 2d before today
.fam
.fi
.if n .RE
.sp
will not show any intervals of the current day.
Use either \*(Aqnow\*(Aq or \*(Aqtomorrow\*(Aq in this case:
.sp
.if n .RS 4
.nf
.fam C
$ timew sum 2d before now
$ timew sum 2d before tomorrow
.fam
.fi
.if n .RE
.SH "SEE ALSO"
.sp
\fBtimew\-durations\fP(7),
\fBtimew\-hints\fP(7)